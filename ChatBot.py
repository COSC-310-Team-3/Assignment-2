{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Exception in Tkinter callback\n",
      "Traceback (most recent call last):\n",
      "  File \"C:\\Users\\ospic\\miniconda3\\lib\\tkinter\\__init__.py\", line 1883, in __call__\n",
      "    return self.func(*args)\n",
      "  File \"<ipython-input-7-5744c9e0a0b4>\", line 41, in sendClick\n",
      "    output = userInput + \"\\n                        \" + reply + \"\\n\"\n",
      "TypeError: can only concatenate str (not \"NoneType\") to str\n",
      "Exception in Tkinter callback\n",
      "Traceback (most recent call last):\n",
      "  File \"C:\\Users\\ospic\\miniconda3\\lib\\tkinter\\__init__.py\", line 1883, in __call__\n",
      "    return self.func(*args)\n",
      "  File \"<ipython-input-7-5744c9e0a0b4>\", line 43, in sendClick\n",
      "    output = \"\\n\" + userInput + \"\\n        \" + reply + \"\\n\"\n",
      "TypeError: can only concatenate str (not \"NoneType\") to str\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None,)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "import tkinter\n",
    "from tkinter import *\n",
    "from nltk.chat.util import Chat, reflections\n",
    "\n",
    "\n",
    "# This is a modified converse function from nltk.chat.util\n",
    "class modifiedChat(Chat):\n",
    "    def converse(self, user_input):\n",
    "        while user_input[-1] in \"!.\":\n",
    "            user_input = user_input[:-1]\n",
    "        return self.respond(user_input)\n",
    "\n",
    "####################################################################\n",
    "# The following is our chatbot implementation                      #\n",
    "####################################################################\n",
    "                \n",
    "\n",
    "\n",
    "#this section is functions\n",
    "\n",
    "#this function ends the window\n",
    "def kill():\n",
    "    root.destroy()\n",
    "    \n",
    "#this function creates the menu\n",
    "def makeMenu():\n",
    "    mainMenu = Menu(root)\n",
    "    mainMenu.add_command(label = \"Quit\", command=kill)\n",
    "    root.config(menu=mainMenu)\n",
    "    \n",
    "#This function retrieves the userInput and then passes it to the console\n",
    "def sendClick():     \n",
    "    userInput = mesWin.get(\"1.0\", END)\n",
    "    mesWin.delete(\"1.0\", END)\n",
    "    reply = chatbot.converse(userInput)\n",
    "    output = \"\"\n",
    "    chatWin.configure(state=\"normal\")\n",
    "    if \"To begin\" in chatWin.get(\"1.0\", END):\n",
    "        chatWin.delete(\"1.0\", END)\n",
    "        output = userInput + \"\\n                        \" + reply + \"\\n\"\n",
    "    else:\n",
    "        output = \"\\n\" + userInput + \"\\n        \" + reply + \"\\n\"\n",
    "    chatWin.insert(END, output)\n",
    "    chatWin.see(END)\n",
    "    chatWin.configure(state=\"disabled\")\n",
    "    \n",
    "    \n",
    "\n",
    "#generate the  and run the chat interface\n",
    "def beginClick():\n",
    "    begin.destroy()\n",
    "    # place the Chat window\n",
    "    chatWin.place(x=6, y=6, height=385, width=562.5)\n",
    "    # place the message window\n",
    "    mesWin.place(x=128, y=400, height=88, width=440)\n",
    "    mesWin.place(x=6, y=400, height=88, width=440)\n",
    "    #Button to send your message\n",
    "    sendIn = Button(root, text=\"Send\", width=12, height=5, bd=0, bg=\"#0080FF\", activebackground=\"#00BFFF\", foreground=\"#FFFFFF\", font=(\"Arial\", 12), command=sendClick)\n",
    "    sendIn.place(x=455, y=400, height=88)\n",
    "\n",
    "    \n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "#this section is where the GUI will be built\n",
    "root = Tk()\n",
    "root.title(\"Chatbot\")\n",
    "root.geometry(\"575x500\")\n",
    "root.resizable(width=FALSE, height=FALSE)\n",
    "\n",
    "#this section is textboxes that will be placed by the beginClick function\n",
    "#chat window\n",
    "chatWin = Text(root, bd=1, bg=\"black\", width=50, height=8, font=(\"Arial\", 25), foreground=\"#00FFFF\", wrap=WORD)\n",
    "chatWin.insert(END, \"To begin chatting type your message into the textbox on the bottom\\n\")\n",
    "chatWin.configure(state=\"disabled\")\n",
    "#Message window\n",
    "mesWin = Text(root, bd=0, bg=\"black\",width=\"30\", height=\"4\", font=(\"Arial\", 23), foreground=\"#00ffff\")\n",
    "\n",
    "\n",
    "#generate the menu at the top\n",
    "makeMenu()\n",
    "\n",
    "\n",
    "\n",
    "#these are conversation pairs\n",
    "pairs = [\n",
    "    ['Hello|Hi', ['Hi, what is your name?']],\n",
    "    ['my name is (.*)', ['Hello %1, my name is sports bot. Do you play any sports']],\n",
    "    ['(.*) play (.*)', ['Thats so cool! I used to play %2 as well. Do you watch %2?']],\n",
    "    ['yes, i watch (.*)', ['Who is your favourite player?']],\n",
    "    ['No, i do not watch (.*)', ['Really? What sport do you watch']],\n",
    "    ['i watch (.*)', ['Who is your favourite player?']],\n",
    "    ['my favourite player is (.*)', ['%1? I have never heard of him, how many points a game do they score?']],\n",
    "    ['(.*) scores (.*)', ['Thats not too bad but I bet I could beat him 1 on 1']],\n",
    "    ['No you could not', ['Yes I could, how many points can you score in your sport?']],\n",
    "    ['Yes you could', ['I know, how many points can you score in your sport?']],\n",
    "    ['I can score (.*)', ['You can score %1? How old are you?']],\n",
    "    ['i am (.*) years old', ['I guess thats not bad for a %1 year old. Is there anything you want to ask me regarding sports?']],\n",
    "    ['(.*) favourite sport?', ['Hockey, anything else?']],\n",
    "    ['(.*) old are you?', ['I am a bot I do not age']],\n",
    "    ['(.*) favourite player?', ['Loui Erikkson of the Vancouver Canucks, he definitely deserves his $36 million contract']],\n",
    "    ['(.*) to a game?', ['No, I am a bot. I am unable to be physically anywhere.']],\n",
    "    ['(.*) Stanley Cup this year?', ['Any team but Vancouver']],\n",
    "    ['(.*) watch the game last night?', ['I did not watch it, but all the stats automatically uploaded to my personal hard drive']],\n",
    "    ['(.*) next summer olympics?', ['This summer in Tokyo']],\n",
    "    ['(.*) next winter olympics?', ['2022 in Beijing']],\n",
    "    ['(.*) most gold medals?', ['Michael Phelps with 23.']],\n",
    "    ['how are you?', ['I am well. And you?']],\n",
    "    ['i am (.*)', ['Alright']],\n",
    "    ['when is the next world cup?', ['Next year in Qatar']],\n",
    "    ['who will win the next world cup?',['Canada, no doubt. They are a soccer powerhouse']],\n",
    "    ['who are you', ['I am sports bot. It is my duty to assist you in anything related to sports.']],\n",
    "    ['(.*) favourite team?', ['I have no allegiance to any sports organization']],\n",
    "    ['(.*) favourite basketball player?', ['The legend Alex Caruso']],\n",
    "    ['(.*) favourite goal of all time?', ['Any of Loui Erikksons empty nets']]\n",
    "]\n",
    "\n",
    "\n",
    "#Entry Screen\n",
    "#When this button is clicked it will call the beginClick function to generate the chat interface\n",
    "chatbot = modifiedChat(pairs, reflections)\n",
    "\n",
    "begin = Button(text=\"Click me to begin chatting with SportBot!\", width=400, height=500, bg=\"black\", fg=\"white\", command=beginClick, font=(\"Arial\", 20))\n",
    "begin.pack()\n",
    "\n",
    "\n",
    "#when the code reaches this point it begins to loop a chat\n",
    "\n",
    "\n",
    "root.mainloop(), "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
